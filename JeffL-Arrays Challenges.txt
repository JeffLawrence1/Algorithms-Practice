// PushFront

function pushFront(arr, val){
  for(let i = arr.length; i > 0; i--){
    arr[i] = arr[i-1];
  }
  arr[0] = val;
  return arr;
}
console.log(pushFront([1, 3, 4, 5], 2));

// PopFront

function popFront(arr){
  let temp = arr[0];
  for(let i = 0; i <arr.length-1; i++){
    arr[i]=arr[i+1];

  }
  arr.pop();
  console.log(arr);
  return temp;
}
console.log(popFront([1, 3, 4, 6, 7, 4]));

// InsertAt

function insertAt(arr,idx, val){
  for(let i = arr.length; i >= idx; i--){
    arr[i] = arr[i-1];
  }
  arr[idx]= val;
  return arr;
}
console.log(insertAt([1, 4, 5, 6, 7], 2, 12));

// RemoveAt

function removeAt(arr,idx){
  let temp = arr[idx];
  for(let i = idx; i < arr.length; i++){
    arr[i] = arr[i +1];
  }
  arr.pop();
  console.log(arr);
  return temp;
}
console.log(removeAt([1, 4, 5, 6, 7], 2));

// Second-to-last

function secondToLast(arr){
  return arr[arr.length-2];
}
console.log(secondToLast([3, 4, 5, 6, 7]));

// Nth-to-last

function nthToLast(arr, N){
  return arr[arr.length-N];
}
console.log(nthToLast([3, 4, 5, 6, 7], 3));

// Second-Largest

function secondLargest(arr){
  let max = arr[0];
  let sL = arr[0];
  let cur = arr[0];
  
  for(let i = 0; i < arr.length; i++){
    cur = arr[i];
    if(cur > max){
      sL = max;
      max = cur;
    }
    else if(cur > sL){
      sL = cur;
    }
  }
  return sL;
}
console.log(secondLargest([3, -2, 4, 11, 6, 8]));

// Nth-Largest

function nthLargest(arr, N){
  arr.sort(function(a, b){return a-b});
  return arr[arr.length - N];
}
console.log(nthLargest([3, -2, 4, 11, 6, 8], 3));